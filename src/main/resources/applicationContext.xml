<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 1、引入配置文件 :该标签在spring配置文件中只能存在一份！！！
			ignore-unresolvable：是否忽略解析不到的属性，如果不忽略，找不到将抛出异常 -->
	<!--<context:property-placeholder location="jdbc-basic.properties" ignore-unresolvable="true"/>-->
	<util:properties id="jdbc" location="classpath:jdbc-basic.properties">
	</util:properties>

	<!-- 2、开启自动扫描 -->
	<context:component-scan base-package="top.bigpong.action">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<context:component-scan base-package="top.bigpong.service">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	<!-- spring mvc 开启拦截器，注解扫描
		 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
		 两个bean,是spring MVC为@Controllers分发请求所必须的。
		 http://blog.csdn.net/jbgtwang/article/details/7359592-->
	<mvc:annotation-driven/>
	<!-- 也可以这么写：开启IOC注解扫描 -->
	<!--<context:component-scan base-package="com.tarena"/>-->

	<!-- 3、申明连接池datasource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{jdbc.driverClassName}"></property>
		<property name="url" value="#{jdbc.url}"></property>
		<property name="username" value="#{jdbc.username}"></property>
		<!--<property name="password" value="#{jdbc.password}"></property>-->
	</bean>

	<!-- 4、配置Session工厂/Spring整合mybatis -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入DateSource -->
		<property name="dataSource" ref="dataSource"/>
		<!--
            需要加载的mapper.xml,该bean被创建后会自动加载这些文件
            value:文件的路径
        -->
		<!-- 当前目录下没有xml文件，会报红 -->
		<property name="mapperLocations" value="classpath:top/bigpong/mapper/*.xml"/>
		<property name="typeAliasesPackage" value="top.bigpong.entity"/>
		<property name="plugins">
			<array>
				<bean class="top.bigpong.pageHelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=true
						</value>
					</property>
				</bean>
				<bean class="top.bigpong.mapperhelper.MapperInterceptor"/>
			</array>
		</property>
	</bean>

	<!-- 5、配置MapperScannerConfigurer -->
	<bean id="managerScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--
           注入需要扫描的包,它会自动扫描这个包下的接口，
           然后实现这些接口，并且会实例化这些接口的实现类
       -->
		<property name="basePackage" value="top.bigpong.mapper"/>
		<!--
            默认情况下，该bean会扫描指定包下所有的接口。
            如果不希望它扫描所有的接口，那么可以用注解来声明要扫描的接口。
            该注解需要我们自己定义，并且将这个注解注入给当前的bean
         -->
		<!--<property name="annotationClass" value="com.tarena.annotation.MyBatisRepository"/>-->
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
	</bean>
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sessionFactory"/>
	</bean>
	<!-- 以上：jdbc/mybatis配置结束 -->

	<!-- 6.1、事务控制：AspectJXML配置事务控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 切点路径要非常注意 -->
		<aop:pointcut id="pointcut1" expression="execution(* top.bigpong.service.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>
	</aop:config>

	<!-- 6.2：开启注解事务标签（另外一种方式） -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- 7、定义跳转的文件的前后缀 ，视图模式配置  -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>